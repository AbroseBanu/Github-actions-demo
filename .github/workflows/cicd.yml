name: Cicdonpush

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

# on:
#   push:
#     branches: [ "main" ]

jobs:
  compile:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn compile

  securitycheck:
    runs-on: self-hosted
    needs: compile
    steps:
      - uses: actions/checkout@v4
      - name: Trivy installation
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y
      - name: Trivy scan
        run: trivy fs --format table -o report.json .

  gitleaksscan:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Gitleaks installation
        run: |
          sudo apt-get update
          sudo apt-get install gitleaks -y
      - name: Run Gitleaks scan
        run: gitleaks detect --report-format json --report-path gitleaks-report.json

  unittest:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Run unit tests
        run: mvn test

  sonarqube:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0   # recommended for accurate reporting
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4.1.0   # âœ… specify version
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

      - name: SonarQube Quality Gate
        uses: SonarSource/sonarqube-quality-gate-action@v1.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}